// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  username  String   @unique
  avatar    String?
  bio       String?
  pets      Pet[]
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}

model Pet {
  id             String           @id @default(cuid())
  name           String
  age            Int
  color          String
  breed          String
  weight         String
  adoptationDate String
  vaccinations   PetVaccination[]
  category       PetCategory?
  capabilities   PetCapability[]
  posts          PetPost[]
  owner          User             @relation(fields: [owerId], references: [id])
  owerId         String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model PetCapability {
  id        String   @id @default(cuid())
  label     String
  pet       Pet      @relation(fields: [petId], references: [id])
  petId     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PetVaccination {
  id              String   @id @default(cuid())
  vaccine         String
  vaccinationDate DateTime
  pet             Pet      @relation(fields: [petId], references: [id])
  petId           String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model PetCategory {
  id          String   @id @default(cuid())
  name        String   @unique
  description String
  pet         Pet      @relation(fields: [petId], references: [id])
  petId       String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PetPost {
  id         String      @id @default(cuid())
  caption    String
  pet        Pet         @relation(fields: [petId], references: [id])
  petId      String
  images     PostImage[]
  createdAte DateTime    @default(now())
  updateAt   DateTime    @updatedAt
}

model PostImage {
  id         String   @id @default(cuid())
  imageUrl   String
  post       PetPost  @relation(fields: [postId], references: [id])
  postId     String
  createdAte DateTime @default(now())
  updateAt   DateTime @updatedAt
}
